@import "reset-everything.less";
@import "utils.less";

@gradFrom: rgb(20, 20, 20);
@gradTo: rgb(10, 10, 10);
@textColor: rgb(220, 220, 255); /*rgb(100, 135, 195);*/
@codeColor: rgb(255, 255, 110);
@serif: "Lora", serif;
@sansSerif: "Confortaa", sans-serif;
@monospace: "Source Code Pro", monospace;
@basicFontSize: 24px;

/* We set up <body> styles with default font and nice gradient in the
   background. */
body {
    font-family: @sansSerif;
    min-height: 740px;
    .gradient(@gradFrom, @gradTo);
    color: @textColor;
}

/* Now let's bring some text styles back ... */
b, strong { font-weight: bold }
i, em { font-style: italic }

/* ... and give links a nice look. */
a {
    color: inherit;
    text-decoration: none;
    padding: 0 0.1em;
    background: rgba(255,255,255,0.1);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.9);
    border-radius: 0.2em;
    .transition(0.5s);
}

a:hover,
a:focus {
    background: rgba(255,255,255,1);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.5);
}

.impress-enabled .substep {
  opacity: 0;
  .transition(all 1s);
}

.impress-enabled .substep.active {
  opacity: 1;
}

.impress-enabled .substep.present {
  color: @textColor;
}

/* Special styling for the nix name. */
.nix-name {
  color: #0095A8;
  /* font-family: @sansSerif; */
}

/* Now let's style the presentation steps.
   We start with basics to make sure it displays correctly in everywhere */
.step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;
    .box-sizing(border-box);
    font-family: @serif;
    font-size: @basicFontSize;
    line-height: 1.5;
    border-radius: 0.8em;
}

.small {
  font-size: @basicFontSize / 1.5;
}

div p {
    font-size: @basicFontSize;
}

div h3 {
    font-size: @basicFontSize * 2;
}

.generic-code {
    font-family: @monospace;
    color: @codeColor;
}

ul {
    list-style-type: square;
    margin-left: 20px;
    padding-left: 10px;
}

/* Enhance the styles for impress.js.
   Basically we remove the margin and make inactive steps a little bit
   transparent. */
.impress-enabled .step {
    margin: 0;
    opacity: 0.1;
    .transition(opacity 1s);
}

/* And when an element is active, give it a very slight background. */
.impress-enabled .step.active {
    opacity: 1;
    background: rgba(255, 255, 255, 0.1);
    .transition(all 1s);
}

.step.code {
  font-family: @monospace;
}

/*
    These 'slide' step styles were heavily inspired by HTML5 Slides:
    http://html5slides.googlecode.com/svn/trunk/styles.css

    ;)

    They cover everything what you see on first three steps of the demo.
*/
.slide {
    display: block;

    width: 900px;
    height: 700px;
    padding: 40px 60px;

    background-color: rgba(255, 255, 255, 0.1);
    border: 1px solid rgba(0, 0, 0, .3);
    border-radius: 10px;
    box-shadow: 0 2px 6px rgba(0, 0, 0, .1);

    color: rgb(150, 150, 150);
    text-shadow: 0 2px 2px rgba(0, 0, 0, .1);

    font-family: @sansSerif;
    font-size: 30px;
    line-height: 36px;
    letter-spacing: -1px;
}

.slide q {
    display: block;
    font-size: 50px;
    line-height: 72px;

    margin-top: 100px;
}

.slide q strong {
    white-space: nowrap;
}

/*
    And now we start to style each step separately.

    I agree that this may be not the most efficient, object-oriented and
    scalable way of styling, but most of steps have quite a custom look
    and typography tricks here and there, so they had to be styled separately.

    First is the title step with a big <h1> (no room for padding) and some
    3D positioning along Z axis.
*/

#title {
    padding: 0;
}

#title .try {
    font-size: 64px;
    position: absolute;
    top: -0.5em;
    left: 1.5em;
    .transform(translateZ(20px));
}

#title h1 {
    font-size: 190px;
    .transform(translateZ(50px));
}

#title .footnote {
    font-size: 32px;
}

/* Second step is nothing special, just a text with a link, so it doesn't need
   any special styling.
   Let's move to 'big thoughts' with centered text and custom font sizes.
*/
#big {
    width: 600px;
    text-align: center;
    font-size: 60px;
    line-height: 1;
}

#big b {
    display: block;
    font-size: 250px;
    line-height: 250px;
}

#big .thoughts {
    font-size: 90px;
    line-height: 150px;
}

/* 'Tiny ideas' just need some tiny styling. */
#tiny {
    width: 500px;
    text-align: center;
}

/* This step has some animated text ... */
#ing { width: 500px }

/* ... so we define display to `inline-block` to enable transforms and
   transition duration to 0.5s ... */
#ing b {
    display: inline-block;
    .transition(0.5s);
}

/* ... and we want 'positioning` word to move up a bit when the step gets
   `present` class ... */
#ing.present .positioning {.transform(translateY(-10px));}

/* ... 'rotating' to rotate a quarter of a second later ... */
#ing.present .rotating {
    .transform(rotate(-10deg));
    .transition-delay(0.25s);
}

/* ... and 'scaling' to scale down after another quarter of a second. */
#ing.present .scaling {
    .transform(scale(0.7));
    .transition-delay(0.5s);
}

/* We also make other steps visible and give them a pointer cursor using the
   `impress-on-` class. */
.impress-on-overview .step {
    opacity: 1;
    cursor: pointer;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled          { pointer-events: none }
.impress-enabled #impress { pointer-events: auto }
